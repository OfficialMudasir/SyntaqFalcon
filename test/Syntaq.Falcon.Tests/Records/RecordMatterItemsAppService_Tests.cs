using Abp.Application.Services.Dto;
using Shouldly;
using Syntaq.Falcon.Records;
using Syntaq.Falcon.Records.Dtos;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Xunit;

using Abp.Authorization;
using Abp.Domain.Repositories;
using Abp.Domain.Uow;
using Abp.Linq.Extensions;
using Abp.UI;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Cors;
using Microsoft.EntityFrameworkCore;
using Syntaq.Falcon.AccessControlList;
using Syntaq.Falcon.AccessControlList.Dtos;
using Syntaq.Falcon.Authorization;

using Syntaq.Falcon.Submissions;
using Syntaq.Falcon.Utility;

using System.IO;

using System.Linq.Dynamic.Core;

using static Syntaq.Falcon.Projects.ProjectConsts;
using static Syntaq.Falcon.Records.RecordMatterContributorConsts;
using Syntaq.Falcon.EntityFrameworkCore;

namespace Syntaq.Falcon.Tests.Records
{
    public class RecordMatterItemsAppService_Tests : AppTestBase
    {
        private readonly IRecordMatterItemsAppService _recordMatterItemsAppService;
   
          
        public RecordMatterItemsAppService_Tests( )
        {
            _recordMatterItemsAppService = Resolve<IRecordMatterItemsAppService>();
           

        }
       

        [Fact]
        public void Should_Get_All_Record_Matter_Items_By_Record_Matter()
        {
            //Arrange
            var exitingRecordMatter = UsingDbContext(context => context.RecordMatters.FirstOrDefault(a => a.RecordMatterName == "Record Matter To Update"));
            GetAllRecordMatterItemsInput input = new GetAllRecordMatterItemsInput()
            {
                Id = exitingRecordMatter.Id
            };

            //Act
            var output = _recordMatterItemsAppService.GetAllByRecordMatter(input);

            //Assert
            output.Items.Count.ShouldBe(3);
        }

        [Fact]
        public async Task Should_Get_Record_Matter_Item_For_Edit()
        {
            //Arrange
            var exitingRecordMatterItem = UsingDbContext(context => context.RecordMatterItems.FirstOrDefault(a => a.DocumentName == "Record Matter Item To Update"));

            //Act
            var output = await _recordMatterItemsAppService.GetRecordMatterItemForEdit(new EntityDto<Guid>(Guid.Parse(exitingRecordMatterItem.Id.ToString())));

            //Assert
            output.RecordMatterItem.DocumentName.ShouldBe("Record Matter Item To Update");
            output.RecordMatterItem.ShouldNotBeNull();
        }

        [Fact]
        public async Task Should_Create_Record_Matter_Item()
        {
            //Arrange
            var exitingRecordMatter = UsingDbContext(context => context.RecordMatters.FirstOrDefault(a => a.RecordMatterName == "Record Matter To Update"));
            //var exitingRecordMatterItem = UsingDbContext(context => context.RecordMatterItems.FirstOrDefault(a => a.DocumentName == "Record Matter Item To Update"));

            CreateOrEditRecordMatterItemDto recordMatterItem = new CreateOrEditRecordMatterItemDto()
            {
                Id = Guid.Parse("00000000-0000-0000-0000-000000000000"),
                DocumentName = "Unit Test Record Matter Item",
                //Document = "0x504B0304140000000800273D3252B472424BC3010000C503000010000000646F6350726F70732F6170702E786D6C9D53416EDB3010FC8AC07B4CDB288AC2A01414CE2187B6316035396FA9954D942209722DC4",
                // Document = "",
                //Document = exitingRecordMatterItem.Document.ToString(),
                RecordMatterId = exitingRecordMatter.Id,
                Status = "Completed"
            };

            //Act
            await _recordMatterItemsAppService.CreateOrEdit(recordMatterItem);

            //Assert
            UsingDbContext(context =>
            {
                var newRecordMatterItem = context.RecordMatterItems.FirstOrDefault(a => a.DocumentName == "Unit Test Record Matter Item");
                newRecordMatterItem.ShouldNotBeNull();
            });
        }

        [Fact]
        public async Task Should_Update_Record_Matter_Item()
        {

            //Arrange
             var exitingRecordMatterItem = UsingDbContext(context => context.RecordMatterItems.FirstOrDefault(a => a.DocumentName == "Should_Update_Record_Matter_Item") );            
          

            CreateOrEditRecordMatterItemDto recordMatter = new CreateOrEditRecordMatterItemDto()
            {
                Id = Guid.Parse(exitingRecordMatterItem.Id.ToString()),
                DocumentName = "Should_Update_Record_Matter_Item Is Updated",
                RecordMatterId = exitingRecordMatterItem.RecordMatterId,
                Status = "Completed"
            };

            //Act
            await _recordMatterItemsAppService.CreateOrEdit(recordMatter);

            //Assert
            UsingDbContext(context => context.RecordMatterItems.FirstOrDefault(a => a.Id == exitingRecordMatterItem.Id)).DocumentName.ShouldBe("Should_Update_Record_Matter_Item Is Updated");
        }
    }
}
